plugins {
	id "io.freefair.lombok" version "6.1.0"
	id 'org.springframework.boot' version '2.5.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'lb.microservice'
version = '0.0.1-SNAPSHOT'

repositories {
	mavenCentral()
}
jar {
	enabled = false
}
ext{
	springDocApiVersion = "1.5.10"
	springCloudVersion = "2020.0.4"
	resilience4jVersion = "1.7.0"
}

dependencies {
	implementation project(':api')
	implementation project(':util')
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
  	implementation 'org.springframework.security:spring-security-oauth2-resource-server'
  	implementation 'org.springframework.security:spring-security-oauth2-jose'
	implementation 'org.springframework.cloud:spring-cloud-starter-stream-rabbit'
	implementation 'org.springframework.cloud:spring-cloud-starter-stream-kafka'
	implementation "org.springdoc:springdoc-openapi-webflux-ui:${springDocApiVersion}"
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.0'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.retry:spring-retry'
	implementation "io.github.resilience4j:resilience4j-spring-boot2:${resilience4jVersion}"
	implementation "io.github.resilience4j:resilience4j-reactor:${resilience4jVersion}"
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	implementation 'org.springframework.cloud:spring-cloud-sleuth-zipkin'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.cloud:spring-cloud-stream::test-binder'
	testImplementation 'io.projectreactor:reactor-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
	dependencies {
		dependency "io.github.resilience4j:resilience4j-spring:${resilience4jVersion}"
		dependency "io.github.resilience4j:resilience4j-annotations:${resilience4jVersion}"
		dependency "io.github.resilience4j:resilience4j-consumer:${resilience4jVersion}"
		dependency "io.github.resilience4j:resilience4j-core:${resilience4jVersion}"
		dependency "io.github.resilience4j:resilience4j-circuitbreaker:${resilience4jVersion}"
		dependency "io.github.resilience4j:resilience4j-ratelimiter:${resilience4jVersion}"
		dependency "io.github.resilience4j:resilience4j-retry:${resilience4jVersion}"
		dependency "io.github.resilience4j:resilience4j-bulkhead:${resilience4jVersion}"
		dependency "io.github.resilience4j:resilience4j-timelimiter:${resilience4jVersion}"
		dependency "io.github.resilience4j:resilience4j-micrometer:${resilience4jVersion}"
		dependency "io.github.resilience4j:resilience4j-circularbuffer:${resilience4jVersion}"
	}
}

test {
	useJUnitPlatform()
}
